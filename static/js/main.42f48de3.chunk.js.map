{"version":3,"sources":["components/Card.tsx","types/state.ts","types/actions.ts","store/mainReducer.ts","store/store.ts","components/LoadButton.tsx","store/actionGenerators.ts","components/CardList.tsx","components/Login.tsx","App.tsx","index.tsx"],"names":["Card","className","undefined","this","props","image","src","alt","href","link","title","preview","React","Component","defaultState","cards","ADD_ARTICLE","mainReducer","state","action","console","log","type","article","store","createStore","LoadButton","onClick","evt","handleClick","loadMore","fetch","then","response","json","error","content_urls","desktop","page","extract","originalimage","source","dispatch","connect","length","CardList","elements","map","value","key","Login","to","App","basename","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"sQASqBA,E,iLAEjB,OACE,yBAAKC,UAAU,aACUC,IAArBC,KAAKC,MAAMC,OAAuB,yBAAKC,IAAKH,KAAKC,MAAMC,MAAOE,IAAI,KACpE,4BAAI,uBAAGC,KAAML,KAAKC,MAAMK,MAAON,KAAKC,MAAMM,QAC1C,2BAAIP,KAAKC,MAAMO,c,GANWC,IAAMC,W,gBCE3BC,EAA0B,CACnCC,MAAO,ICVEC,EAAc,cCgBZC,MAff,WAAuF,IAAjEC,EAAgE,uDAA7CJ,EAAcK,EAA+B,uCAGlF,OAFAC,QAAQC,IAAI,gBAELF,EAAOG,MACV,KAAKN,EAIDE,EAAQ,CAAEH,MADE,sBAAOG,EAAMH,OAAb,CAAoBI,EAAOI,WAK/C,OAAOL,GCTEM,EAAQC,YAAYR,G,ICI3BS,E,iLACQ,IAAD,OACL,OAAO,yBAAKzB,UAAU,cAClB,4BAAQ0B,QAAS,SAAAC,GAAG,OAAI,EAAKC,YAAYD,KACnCzB,KAAKC,MAAM0B,SAAU,WAAa,sB,kCAepCF,GAERG,MAAM,4DACDC,MAAM,SAAAC,GAAQ,OAAIA,EAASC,UAAQ,SAAAC,GAAK,OAAIf,QAAQC,IAAI,qBAAsBc,MAC9EH,MAAM,SAAAE,GAAI,OC9BIX,ED+Ba,CACpBb,MAAOwB,EAAKxB,MACZD,KAAMyB,EAAKE,aAAaC,QAAQC,KAChC3B,QAASuB,EAAKK,QACdlC,MAAO6B,EAAKM,cAAcC,QD7BjBtB,EELlB,CACHG,KAAMN,EACNO,gBFIJC,EAAMkB,SAASvB,GADZ,IAAsBA,EENFI,S,GDOFX,IAAMC,WAsChB8B,mBAJf,SAAyBzB,GACrB,MAAO,CAAEY,SAAiC,IAAvBZ,EAAMH,MAAM6B,UAGpBD,CAAyBjB,GEtClCmB,E,iLAGF,IAAIC,EAAW3C,KAAKC,MAAMW,MAAMgC,KAAI,SAACC,GAAD,OAAY,kBAAC,EAAD,CAAMC,IAAKD,EAAMtC,MAAOA,MAAOsC,EAAMtC,MAAOD,KAAMuC,EAAMvC,KAAME,QAASqC,EAAMrC,QAASN,MAAO2C,EAAM3C,WAGnJ,OAFAe,QAAQC,IAAI,aAAeyB,EAASF,QAGlC,yBAAK3C,UAAU,YACb,6BACI6C,GAEJ,kBAAC,EAAD,W,GAXelC,IAAMC,WAqBd8B,mBAJf,SAAyBzB,GACvB,MAAO,CAAEH,MAAOG,EAAMH,SAGT4B,CAAyBE,GCjBzBK,E,iLATP,OAAO,yBAAKjD,UAAU,SAClB,yDACA,2BAAOqB,KAAK,SACZ,2BAAOA,KAAK,aACZ,kBAAC,IAAD,CAAM6B,GAAG,SAAT,c,GANQvC,IAAMC,WCmBXuC,G,MAdO,WACpB,OACE,kBAAC,IAAD,CAAYC,SAAS,KACrB,kBAAC,IAAD,CAAU7B,MAAOA,GACb,yBAAKvB,UAAU,OACb,kBAAC,IAAD,CAAOqD,OAAK,EAACC,KAAK,IAAIC,UAAWN,IACjC,kBAAC,IAAD,CAAOI,OAAK,EAACC,KAAK,QAAQC,UAAWX,SCV/CY,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.42f48de3.chunk.js","sourcesContent":["import React from 'react';\r\n\r\ninterface CardProps {\r\n  title: string;\r\n  image?: string;\r\n  link: string;\r\n  preview: string;\r\n};\r\n\r\nexport default class Card extends React.Component<CardProps> {\r\n  render() {\r\n    return (\r\n      <div className=\"card\">\r\n        { this.props.image !== undefined && <img src={this.props.image} alt=\"\" /> }\r\n        <h2><a href={this.props.link}>{this.props.title}</a></h2>\r\n        <p>{this.props.preview}</p>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","export interface IAppState {\r\n    cards: IArticle[];\r\n};\r\n\r\nexport interface IArticle {\r\n    title: string;\r\n    image?: string;\r\n    link: string;\r\n    preview: string;\r\n};\r\n\r\nexport const defaultState: IAppState = {\r\n    cards: []\r\n};\r\n","import { IArticle } from \"./state\";\r\n\r\nexport const ADD_ARTICLE = \"ADD_ARTICLE\";\r\n\r\nexport interface AddArticleAction {\r\n    type: typeof ADD_ARTICLE;\r\n    article: IArticle;\r\n}\r\n\r\nexport type AppActions = AddArticleAction;\r\n","import { IAppState, defaultState } from \"../types/state\";\r\nimport { AppActions, ADD_ARTICLE } from \"../types/actions\";\r\n\r\nfunction mainReducer (state: IAppState = defaultState, action: AppActions): IAppState {\r\n    console.log(\"MainReducer!\")\r\n\r\n    switch(action.type) {\r\n        case ADD_ARTICLE:\r\n            // Create a brand new array and object.  React only does a shallow compare,\r\n            // so if the array object itself doesn't get replaced, the CardList won't re-render.\r\n            let newArray = [...state.cards, action.article];\r\n            state = { cards: newArray }\r\n            break;\r\n    }\r\n    \r\n    return state;\r\n}\r\n\r\nexport default mainReducer;\r\n","import { createStore } from 'redux';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport mainReducer from './mainReducer';\r\nimport { AppActions } from '../types/actions';\r\n\r\n// export const store = createStore(mainReducer, applyMiddleware(thunk));\r\nexport const store = createStore(mainReducer);\r\n\r\n// Is this hacky?  It's so simple, but nothing online even came close to suggesting it...\r\nexport function myDispatcher(action: AppActions) {\r\n    store.dispatch(action);\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IAppState } from '../types/state';\r\nimport { myDispatcher } from '../store/store';\r\nimport { addArticle } from '../store/actionGenerators';\r\n\r\ninterface LoadButtonProps {\r\n    loadMore: boolean;\r\n}\r\n\r\nclass LoadButton extends React.Component<LoadButtonProps> {\r\n    render() {\r\n        return <div className=\"LoadButton\">\r\n            <button onClick={evt => this.handleClick(evt)}>\r\n                { this.props.loadMore? \"Another!\" : \"Load an Article\" }\r\n            </button>\r\n        </div>;\r\n    }\r\n\r\n\r\n    /**\r\n     * It's late-o'clock on a weekend and for some reason, neither the above or below functions will work\r\n     * with Thunk to actually call the function that gets returned.\r\n     * So I just shoved the HTTP call into the LoadButton component itself :)\r\n     * It's definitely hacky and wouldn't go over well in the real world.  But also in the real world,\r\n     * I'd hopefully have better resources, like another dev who's worked with Thunk before and can tell\r\n     * me if I'm remotely close to doing it right.  There are not a whole lot of tutorials out there\r\n     * that incorporate both Thunk and TypeScript :/\r\n     */\r\n    handleClick(evt: React.MouseEvent) {\r\n        // fetchArticle();\r\n        fetch('https://en.wikipedia.org/api/rest_v1/page/random/summary')\r\n            .then( response => response.json(), error => console.log('An error occurred.', error))\r\n            .then( json => //console.log(json)\r\n                myDispatcher(addArticle({\r\n                    title: json.title,\r\n                    link: json.content_urls.desktop.page,\r\n                    preview: json.extract,\r\n                    image: json.originalimage.source\r\n            }))\r\n            );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state: IAppState): LoadButtonProps {\r\n    return { loadMore: state.cards.length !== 0 };\r\n  }\r\n\r\nexport default connect(mapStateToProps)(LoadButton);\r\n","import { IArticle } from \"../types/state\";\r\nimport { AddArticleAction, ADD_ARTICLE } from \"../types/actions\";\r\n\r\nexport function addArticle(article: IArticle): AddArticleAction {\r\n    return {\r\n        type: ADD_ARTICLE,\r\n        article\r\n    }\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { IAppState, IArticle } from '../types/state';\r\nimport Card from './Card';\r\nimport LoadButton from './LoadButton';\r\n\r\ninterface CardListProps {\r\n  cards: IArticle[];\r\n};\r\n\r\nclass CardList extends React.Component<CardListProps> {\r\n  render() {\r\n    \r\n    let elements = this.props.cards.map((value) => (<Card key={value.title} title={value.title} link={value.link} preview={value.preview} image={value.image} />))\r\n    console.log(\"Elements: \" + elements.length);\r\n    \r\n    return (\r\n      <div className=\"cardList\">\r\n        <div>\r\n          { elements }\r\n        </div>\r\n        <LoadButton />\r\n      </div>\r\n    );\r\n  }\r\n};\r\n\r\nfunction mapStateToProps(state: IAppState): CardListProps {\r\n  return { cards: state.cards };\r\n}\r\n\r\nexport default connect(mapStateToProps)(CardList);\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nclass Login extends React.Component {\r\n    render() {\r\n        return <div className=\"Login\">\r\n            <h1>Wikipedia Random Articles</h1>\r\n            <input type=\"text\" />\r\n            <input type=\"password\" />\r\n            <Link to=\"/list\">Login</Link>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default Login\r\n","import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { Route, HashRouter } from 'react-router-dom';\r\nimport CardList from './components/CardList';\r\nimport Login from './components/Login';\r\nimport { store } from './store/store';\r\nimport './App.scss';\r\n\r\nconst App: React.FC = () => {\r\n  return (\r\n    <HashRouter basename=\"/\">\r\n    <Provider store={store}>\r\n        <div className=\"App\">\r\n          <Route exact path='/' component={Login} />\r\n          <Route exact path='/list' component={CardList} />\r\n        </div>\r\n      </Provider>\r\n    </HashRouter>\r\n    );\r\n\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}